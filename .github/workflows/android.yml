name: paper

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-Android:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - name: Generate debug keystore
        run: |
          keytool -genkey -v -keystore debug.keystore -keyalg RSA -keysize 2048 -validity 10000 -alias androiddebugkey \
            -storepass android -keypass android -dname "CN=Android Debug, O=Android, C=US"
          echo "Debug keystore generated successfully!"

      - name: Find unsigned APK files
        id: find-unsigned-apk
        run: |
          apk_path=$(find app/build/outputs/apk/ -name "*-unsigned.apk" | head -n 1)
          echo "Found unsigned APK path: $apk_path"
          echo "apk_path=$apk_path" >> $GITHUB_ENV

      - name: Set up apksigner path
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/build-tools/$(ls $ANDROID_HOME/build-tools | sort -V | tail -1)" >> $GITHUB_PATH

      - name: Sign APK with debug keystore
        run: |
          apksigner sign \
            --ks debug.keystore \
            --ks-pass pass:android \
            --key-pass pass:android \
            --out app-release-signed.apk \
            ${{ env.apk_path }}

      - name: Find signed APK files
        id: find-signed-apk
        run: |
          signed_apk_path=$(find . -name "app-release-signed.apk" | head -n 1)
          echo "Found signed APK path: $signed_apk_path"
          echo "signed_apk_path=$signed_apk_path" >> $GITHUB_ENV

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: my-app-artifacts
          path: ${{ env.signed_apk_path }}